#%Vocabulary 1.0
vocabulary: apiBinding
base: http://a.ml/vocabularies/apiBinding#
usage: API binding vocabulary
uses:
  data: data_model.yaml
  shacl: external/shacl.yaml
classTerms:
  Amqp091ChannelBinding:
    displayName: Amqp091ChannelBinding
    extends: ChannelBinding
  Amqp091ChannelBinding010:
    displayName: Amqp091ChannelBinding010
    extends:
      - ChannelBinding
      - Amqp091ChannelBinding
  Amqp091ChannelBinding020:
    displayName: Amqp091ChannelBinding020
    extends:
      - ChannelBinding
      - Amqp091ChannelBinding
  Amqp091ChannelExchange:
    displayName: Amqp091ChannelExchange
  Amqp091ChannelExchange010:
    displayName: Amqp091ChannelExchange010
    extends: Amqp091ChannelExchange
  Amqp091ChannelExchange020:
    displayName: Amqp091ChannelExchange020
    extends: Amqp091ChannelExchange
  Amqp091ChannelQueue:
    displayName: Amqp091Queue
  Amqp091ChannelQueue010:
    displayName: Amqp091Queue010
    extends: Amqp091ChannelQueue
  Amqp091ChannelQueue020:
    displayName: Amqp091Queue020
    extends: Amqp091ChannelQueue
  Amqp091MessageBinding:
    displayName: Amqp091MessageBinding
    extends: MessageBinding
  Amqp091OperationBinding:
    displayName: Amqp091OperationBinding
    extends: OperationBinding
  Amqp091OperationBinding010:
    displayName: Amqp091OperationBinding010
    extends:
      - OperationBinding
      - Amqp091OperationBinding
  Amqp091OperationBinding030:
    displayName: Amqp091OperationBinding030
    extends:
      - OperationBinding
      - Amqp091OperationBinding
  AnypointMQChannelBinding:
    displayName: AnypointMQChannelBinding
    extends: ChannelBinding
  AnypointMQMessageBinding:
    displayName: AnypointMQMessageBinding
    extends: MessageBinding
  ChannelBinding:
    displayName: ChannelBinding
  ChannelBindings:
    displayName: ChannelBindings
  EmptyBinding:
    displayName: EmptyBinding
    extends:
      - ServerBinding
      - ChannelBinding
      - OperationBinding
      - MessageBinding
  GooglePubSubChannelBinding:
    displayName: GooglePubSubChannelBinding
    extends: ChannelBinding
  GooglePubSubMessageBinding:
    displayName: GooglePubSubMessageBinding
    extends: MessageBinding
  GooglePubSubMessageStoragePolicy:
    displayName: GooglePubSubMessageStoragePolicy
  GooglePubSubSchemaDefinition:
    displayName: GooglePubSubSchemaDefinition
  GooglePubSubSchemaSettings:
    displayName: GooglePubSubSchemaSettings
  HttpMessageBinding:
    displayName: HttpMessageBinding
    extends: MessageBinding
  HttpOperationBinding:
    displayName: HttpOperationBinding
    extends: OperationBinding
  IBMMQChannelBinding:
    displayName: IBMMQChannelBinding
    extends: ChannelBinding
  IBMMQChannelQueue:
    displayName: IBMMQChannelQueue
  IBMMQChannelTopic:
    displayName: IBMMQChannelTopic
  IBMMQMessageBinding:
    displayName: IBMMQMessageBinding
    extends: MessageBinding
  IBMMQServerBinding:
    displayName: IBMMQServerBinding
    extends: ServerBinding
  KafkaChannelBinding:
    displayName: KafkaChannelBinding
    extends: ChannelBinding
  KafkaChannelBinding030:
    displayName: KafkaChannelBinding030
    extends:
      - ChannelBinding
      - KafkaChannelBinding
  KafkaChannelBinding040:
    displayName: KafkaChannelBinding040
    extends:
      - ChannelBinding
      - KafkaChannelBinding
  KafkaChannelBinding050:
    displayName: KafkaChannelBinding050
    extends:
      - ChannelBinding
      - KafkaChannelBinding
  KafkaMessageBinding:
    displayName: KafkaMessageBinding
    extends: MessageBinding
  KafkaMessageBinding010:
    displayName: KafkaMessageBinding010
    extends:
      - MessageBinding
      - KafkaMessageBinding
  KafkaMessageBinding030:
    displayName: KafkaMessageBinding030
    extends:
      - MessageBinding
      - KafkaMessageBinding
  KafkaOperationBinding:
    displayName: KafkaOperationBinding
    extends: OperationBinding
  KafkaServerBinding:
    displayName: KafkaServerBinding
    extends: ServerBinding
  KafkaTopicConfiguration:
    displayName: KafkaTopicConfiguration
  KafkaTopicConfiguration040:
    displayName: KafkaTopicConfiguration040
    extends: KafkaTopicConfiguration
  KafkaTopicConfiguration050:
    displayName: KafkaTopicConfiguration050
    extends: KafkaTopicConfiguration
  MessageBinding:
    displayName: MessageBinding
  MessageBindings:
    displayName: MessageBindings
  MqttMessageBinding:
    displayName: MqttMessageBinding
    extends: MessageBinding
  MqttOperationBinding:
    displayName: MqttOperationBinding
    extends: OperationBinding
  MqttServerBinding:
    displayName: MqttServerBinding
    extends: ServerBinding
  MqttServerLastWill:
    displayName: MqttServerLastWill
  OperationBinding:
    displayName: OperationBinding
  OperationBindings:
    displayName: OperationBindings
  PulsarChannelBinding:
    displayName: PulsarChannelBinding
    extends: ChannelBinding
  PulsarChannelRetention:
    displayName: PulsarChannelRetention
  PulsarServerBinding:
    displayName: PulsarServerBinding
    extends: ServerBinding
  ServerBinding:
    displayName: ServerBinding
  ServerBindings:
    displayName: ServerBindings
  SolaceOperationBinding:
    displayName: SolaceOperationBinding
    extends: OperationBinding
  SolaceOperationDestination:
    displayName: SolaceOperationDestination
  SolaceOperationQueue:
    displayName: SolaceOperationQueue
  SolaceOperationTopic:
    displayName: SolaceOperationTopic
  SolaceServerBinding:
    displayName: SolaceServerBinding
    extends: ServerBinding
  WebSocketsChannelBinding:
    displayName: WebSocketsChannelBinding
    extends: ChannelBinding
propertyTerms:
  CleanupPolicy:
    displayName: CleanupPolicy
    description: The cleanup.policy configuration option.
    range: string
  ConfluentKeySchemaValidation:
    displayName: ConfluentKeySchemaValidation
    description: It shows whether the schema validation for the message key is enabled. Vendor specific config.
    range: boolean
  ConfluentKeySubjectNameStrategy:
    displayName: ConfluentKeySubjectNameStrategy
    description: The name of the schema lookup strategy for the message key. Vendor specific config.
    range: string
  ConfluentValueSchemaValidation:
    displayName: ConfluentValueSchemaValidation
    description: It shows whether the schema validation for the message value is enabled. Vendor specific config.
    range: boolean
  ConfluentValueSubjectNameStrategy:
    displayName: ConfluentValueSubjectNameStrategy
    description: The name of the schema lookup strategy for the message value. Vendor specific config.
    range: string
  DeleteRetentionMs:
    displayName: DeleteRetentionMs
    description: The delete.retention.ms configuration option.
    range: integer
  MaxMessageBytes:
    displayName: MaxMessageBytes
    description: The max.message.bytes configuration option.
    range: integer
  RetentionBytes:
    displayName: RetentionBytes
    description: The retention.bytes configuration option.
    range: integer
  RetentionMs:
    displayName: RetentionMs
    description: The retention.ms configuration option.
    range: integer
  accessType:
    displayName: accessType
    description: "'exclusive' or 'nonexclusive'. Only applicable when destinationType is 'queue'."
    range: string
  ack:
    displayName: ack
    description: Whether the consumer should ack the message or not
    range: boolean
  allowedPersistenceRegions:
    displayName: allowedPersistenceRegions
    description: A list of IDs of GCP regions where messages that are published to the topic may be persisted in storage
    range: string
  attribute:
    displayName: attributes
    description: Attributes for this message
    range: data.Object
  autoDelete:
    displayName: autoDelete
    description: Whether the exchange should be deleted when the last queue is unbound from it
    range: boolean
  bcc:
    displayName: bcc
    description: Like cc but consumers will not receive this information
    range: string
  binding:
    displayName: binding
    description: Bindings for this request/response
    range: MessageBindings
  bindingVersion:
    displayName: bindingVersion
    description: The version of this binding
    range: string
  bindings:
    displayName: bindings
    description: List of channel bindings
    range: ChannelBinding
  cc:
    displayName: cc
    description: The routing keys the message should be routed to at the time of publishing
    range: string
  ccdtQueueManagerName:
    displayName: ccdtQueueManagerName
    description: The name of the IBM MQ queue manager to bind to in the CCDT file.
    range: string
  cipherSpec:
    displayName: cipherSpec
    description: The recommended cipher specification used to establish a TLS connection between the client and the IBM MQ queue manager.
    range: string
  cleanSession:
    displayName: cleanSession
    description: Whether to create a persistent connection or not
    range: boolean
  clientId:
    displayName: clientId
    description: The client identifier
    range: string
  compaction:
    displayName: compaction
    description: Topic compaction threshold given in Megabytes.
    range: integer
  contentEncoding:
    displayName: contentEncoding
    description: MIME encoding for the message content
    range: string
  deduplication:
    displayName: deduplication
    description: Message deduplication. When true, it ensures that each message produced on Pulsar topics is persisted to disk only once.
    range: boolean
  deliveryMode:
    displayName: deliveryMode
    description: Delivery mode of the message
    range: integer
  destination:
    displayName: destination
    description: The destination (queue or exchange) name for this channel.
    range: string
  destinationType:
    displayName: destinationType
    description: Defines the type of AsyncAPI channel.
    range: string
  destinations:
    displayName: destinations
    range: SolaceOperationDestination
  durable:
    displayName: durable
    description: Whether the exchange should survive broker restarts or not
    range: boolean
  durablePermitted:
    displayName: durablePermitted
    description: Defines if the subscription may be durable.
    range: boolean
  encoding:
    displayName: encoding
    description: "The encoding of the message "
    range: string
  exchange:
    displayName: exchange
    description: Defines the exchange properties
    range: Amqp091ChannelExchange
  exclusive:
    displayName: exclusive
    description: Whether the queue should be used only by one connection or not
    range: boolean
  expiration:
    displayName: expiration
    description: TTL (Time-To-Live) for the message
    range: integer
  expiry:
    displayName: expiry
    description: This is a period of time expressed in milliseconds and set by the application that puts the message.
    range: integer
  firstRevisionId:
    displayName: firstRevisionId
    description: The minimum (inclusive) revision allowed for validating messages
    range: string
  geo-replication:
    displayName: geo-replication
    description: A list of clusters the topic is replicated to.
    range: string
  groupId:
    displayName: groupId
    description: Defines a logical group of IBM MQ server objects. This is necessary to specify multi-endpoint configurations used in high availability deployments. If omitted, the server object is not part of a group.
    range: string
  headers:
    displayName: headers
    description: A Schema object containing the definitions for HTTP-specific headers
    range: shacl.Shape
  heartBeatInterval:
    displayName: heartBeatInterval
    description: The recommended value (in seconds) for the heartbeat sent to the queue manager during periods of inactivity. A value of zero means that no heart beats are sent. A value of 1 means that the client will use the value defined by the queue manager.
    range: integer
  is:
    displayName: is
    description: Defines what type of channel is it
    range: string
  isPartitioned:
    displayName: isPartitioned
    description: Defines if the queue is a cluster queue and therefore partitioned. If true, a binding option MAY be specified when accessing the queue.
    range: boolean
  keepAlive:
    displayName: keepAlive
    description: Interval in seconds of the longest period of time the broker and the client can endure without sending a message
    range: integer
  labels:
    displayName: labels
    description: "An object of key-value pairs "
    range: data.Object
  lastMsgRetained:
    displayName: lastMsgRetained
    description: Defines if the last message published will be made available to new subscriptions.
    range: boolean
  lastRevisionId:
    displayName: lastRevisionId
    description: The maximum (inclusive) revision allowed for validating messages
    range: string
  lastWill:
    displayName: lastWill
    description: Last Will and Testament configuration
    range: MqttServerLastWill
  mandatory:
    displayName: mandatory
    description: Whether the message is mandatory or not
    range: boolean
  maxMsgLength:
    displayName: maxMsgLength
    description: The maximum length of the physical message (in bytes) accepted by the Topic or Queue. Messages produced that are greater in size than this value may fail to be delivered.
    range: integer
  maxMsgSpoolSize:
    displayName: maxMsgSpoolSize
    description: The maximum amount of message spool that the given queue may use. Only applicable when destinationType is 'queue'.
    range: string
  maxTtl:
    displayName: maxTtl
    description: The maximum TTL to apply to messages to be spooled. Only applicable when destinationType is 'queue'.
    range: string
  message:
    displayName: message
    description: Message used to notify other clients about an ungracefully disconnected client.
    range: string
  messageKey:
    displayName: key
    description: Schema that defines the message key
    range: shacl.Shape
  messageRetentionDuration:
    displayName: messageRetentionDuration
    description: Indicates the minimum duration to retain a message after it is published to the topic
    range: string
  messageStoragePolicy:
    displayName: messageStoragePolicy
    description: Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored
    range: GooglePubSubMessageStoragePolicy
  messageType:
    displayName: messageType
    description: Application-specific message type
    range: string
  method:
    displayName: method
    description: The HTTP method to use when establishing the connection
    range: string
  msgVpn:
    displayName: msgVpn
    description: The Virtual Private Network name on the Solace broker.
    range: string
  multiEndpointServer:
    displayName: multiEndpointServer
    description: If multiEndpointServer is true then multiple connections can be workload balanced and applications should not make assumptions as to where messages are processed. Where message ordering, or affinity to specific message resources is necessary, a single endpoint (multiEndpointServer = false) may be required.
    range: boolean
  name:
    displayName: name
    description: Name of the schema that messages published should be validated against
    range: string
  namespace:
    displayName: namespace
    description: The namespace the channel is associated with.
    range: string
  objectName:
    displayName: objectName
    description: Defines the name of the IBM MQ queue associated with the channel.
    range: string
  operationType:
    displayName: type
    description: Type of operation
    range: string
  orderingKey:
    displayName: orderingKey
    description: If non-empty, identifies related messages for which publish order should be respected
    range: string
  partitions:
    displayName: partitions
    description: Number of partitions configured on this topic.
    range: integer
  persistence:
    displayName: persistence
    description: Persistence of the topic in Pulsar. It MUST be either persistent or non-persistent.
    range: string
  priority:
    displayName: priority
    description: A priority for the message
    range: integer
  qos:
    displayName: qos
    description: Defines how hard the broker/client will try to ensure that the Last Will and Testament message is received
    range: integer
  query:
    displayName: query
    description: A Schema object containing the definitions for each query parameter
    range: shacl.Shape
  queue:
    displayName: queue
    description: Defines the queue properties
    range: Amqp091ChannelQueue
  replicas:
    displayName: replicas
    description: Number of replicas configured on this topic.
    range: integer
  replyTo:
    displayName: replyTo
    description: Name of the queue where the consumer should send the response
    range: string
  retain:
    displayName: retain
    description: Whether the broker should retain the Last Will and Testament message or not
    range: boolean
  retention:
    displayName: retention
    description: Topic retention policy.
    range: PulsarChannelRetention
  schemaDefinition:
    displayName: schema
    description: Define Schema
    range: GooglePubSubSchemaDefinition
  schemaIdLocation:
    displayName: schemaIdLocation
    description: If a Schema Registry is used when performing this operation, tells where the id of schema is stored (e.g. header or payload).
    range: string
  schemaIdPayloadEncoding:
    displayName: schemaIdPayloadEncoding
    description: Number of bytes or vendor specific values when schema id is encoded in payload (e.g confluent/ apicurio-legacy / apicurio-new).
    range: string
  schemaLookupStrategy:
    displayName: schemaLookupStrategy
    description: Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied.
    range: string
  schemaRegistryUrl:
    displayName: schemaRegistryUrl
    description: API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used)
    range: string
  schemaRegistryVendor:
    displayName: schemaRegistryVendor
    description: The vendor of Schema Registry and Kafka serdes library that should be used
    range: string
  schemaSettings:
    displayName: schemaSettings
    description: Settings for validating messages published against a schema
    range: GooglePubSubSchemaSettings
  size:
    displayName: size
    description: Size given in MegaBytes. Defaults to 0
    range: integer
  string:
    displayName: string
    description: The value of the IBM MQ topic string to be used.
    range: string
  tenant:
    displayName: tenant
    description: The pulsar tenant. If omitted, "public" MUST be assumed.
    range: string
  time:
    displayName: time
    description: Time given in Minutes. Defaults to 0
    range: integer
  timestamp:
    displayName: timestamp
    description: Whether the message should include a timestamp or not
    range: boolean
  topic:
    displayName: topic
    description: Kafka topic name if different from channel name.
    range: string
  topicConfiguration040:
    displayName: topicConfiguration040
    description: Topic configuration properties that are relevant for the API.
    range: KafkaTopicConfiguration040
  topicConfiguration050:
    displayName: topicConfiguration050
    description: Topic configuration properties that are relevant for the API.
    range: KafkaTopicConfiguration050
  topicSubscriptions:
    displayName: topicSubscriptions
    description: A list of topics that the client subscribes to, only applicable when destinationType is 'topic'. If none is given, the client subscribes to the topic as represented by the channel name.
    range: string
  ttl:
    displayName: ttl
    description: Message time-to-live in seconds.
    range: integer
  type:
    displayName: type
    description: Binding for a corresponding known type
    range: string
  userId:
    displayName: userId
    description: Identifies the user who has sent the message
    range: string
  vhost:
    displayName: vhost
    description: The virtual host of the exchange
    range: string
