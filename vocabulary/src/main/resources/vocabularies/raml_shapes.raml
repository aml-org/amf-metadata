#%Vocabulary 1.0

base: "http://raml.org/vocabularies/shapes#"

version: "1.0"

usage: Vocabulary defining data shapes, used as an extension to SHACL

uses:
  raml-doc: ./raml_doc.raml

external:
  shacl: "http://www.w3.org/ns/shacl#"

classTerms:

  Shape:
    displayName: Shape
    description: |
      Base class for all shapes. Shapes are Domain Entities that define constraints over parts of a data graph.
      They can be used to define and enforce schemas for the data graph information through SHACL.
      Shapes can be recursive and inherit from other shapes.
    extends:
      - raml-doc.DomainElement
      - shacl.Shape
    properties:
      - inherits

  RecursiveShape:
    displayName: Recursive Shape
    description: |
      Recursion on a Shape structure, used when expanding a shape and finding the canonical representation of that shape.
    extends:
      - Shape
    properties:
      - fixPoint

  AnyShape:
    displayName: Any Shape
    description: Top level shape in the hierarchy of shapes to validate
    extends: Shape
    properties:
      - xmlSerialization

  NodeShape:
    displayName: Node Shape
    description: Shape that validates a record of fields, like a JS object
    extends: AnyShape
    properties:
      - closed
      - minProperties
      - maxProperties
      - discriminator
      - discriminatorValue
      - shacl.properties
      - dependencies

  ArrayShape:
    displayName: Array Shape
    description: Shape that validates a collection of shapes of certain type, like a JS array
    extends: AnyShape
    properties:
      - items
      - shacl.minItems
      - shacl.maxItems
      - uniqueItems

  MatrixShape:
    displayName: Matrix Shape
    description: Multi-dimensional Array Shape
    extends: ArrayShape

  TupleShape:
    displayName: Tuple Shape
    description: Array shape that can have more than one type of shape of items
    extends: ArrayShape

  ScalarShape:
    displayName: Scalar Shape
    description: Shape that validates an scalar value, like a JS scalar
    extends: AnyShape
    properties:
      - shacl.datatype
      - shacl.pattern
      - shacl.minLength
      - shacl.maxLength
      - shacl.minInclusive
      - shacl.maxInclusive
      - shacl.minExclusive
      - shacl.maxExclusive
      - format
      - multipleOf

  UnionShape:
    displayName: Union Shape
    description: Union of multiple shapes
    extends: AnyShape
    properties:
      - anyOf

  NilShape:
    displayName: Nil Shape
    description: Shape that validates a null value, like a null or undefined in JS
    extends: AnyShape

  FileShape:
    displayName: File Shape
    description: Shape used in Web APIs to validate file uploads
    extends: AnyShape
    properties:
      - fileType

  SchemaShape:
    displayName: Schema Shape
    description: Shape used to indicate that the constraints are defined in an external schema language, like JSON Schema
    extends: AnyShape
    properties:
      - mediaType
      - raw

  PropertyDependencies:
    displayName: Property Dependencies
    description: Dependencies between properties
    properties:
      - propertySource
      - propertyTarget

propertyTerms:

  inherits:
    displayName: inherits
    description: |
      Inheritance relationship between shapes. Introduces the idea that the constraints defined by this shape are a specialization of the constraints of the base shapes.
      Graphs validating this shape should also validate all the constraints for the base shapes
    range: Shape

  fixPoint:
    displayName: fix point
    description: |
      Link to the base of the recursion for a recursive shape

  closed:
    description: Indicates that no additional properties can be declared in the target data node
    range: boolean

  minProperties:
    displayName: min properties
    description: Minimum number of properties the target data node must have
    range: integer

  maxProperties:
    displayName: max properties
    description: Maximum number of nodes the target node must have
    range: integer

  discriminator:
    description: String used by clients to distinguish the property marking semantic type of a data node
    range: string

  discriminatorValue:
    displayName: discriminator value
    description: The actual value of the semantic type introduced by the discriminator
    range: string

  dependencies:
    description: Dependencies between properties, marking the appearance of both of them as mandatory
    range: PropertyDependencies

  items:
    description: Shape of the items in an Array Shape
    range: Shape

  uniqueItems:
    displayName: unique items
    description: Constrains the items of an Array Shape to be structurally different
    range: boolean

  format:
    description: Format of the scalar value in a Scalar Shape
    range: string

  multipleOf:
    displayName: multiple of
    description: Constraints the numeric value of Scalar Shape to be a multiple of a particular value
    range: integer

  anyOf:
    displayName: any of
    description: Shapes of the values in the unionShape
    range: Shape

  fileType:
    displayName: file type
    description: type of the file being constraint by a FileShape

  mediaType:
    displayName: media type
    description: media type of the external schema
    range: string

  raw:
    description: raw value of the external data schema
    extends: raml-doc.raw
    range: string
