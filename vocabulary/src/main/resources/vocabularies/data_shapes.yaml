#%Vocabulary 1.0
vocabulary: shapes
base: http://a.ml/vocabularies/shapes#
usage: Vocabulary defining data shapes, used as an extension to SHACL
uses:
  shacl: external/shacl.yaml
  doc: aml_doc.yaml
  core: core.yaml
  apiContract: api_contract.yaml
classTerms:
  AnyShape:
    displayName: AnyShape
    description: Base class for all shapes stored in the graph model
    extends: Shape
  ArrayShape:
    displayName: ArrayShape
    description: Shape that contains a nested collection of data shapes
    extends: AnyShape
  DataTypeFragment:
    displayName: DataTypeFragment
    description: Fragment encoding a RAML data type
    extends:
      - doc.Fragment
      - doc.Unit
  DiscriminatorValueMapping:
    displayName: DiscriminatorValueMapping
    description: Mapping that relates a certain discriminator value to a certain shape
  FileShape:
    displayName: FileShape
    description: Shape describing data uploaded in an API request
    extends: AnyShape
  MatrixShape:
    displayName: MatrixShape
    description: Data shape containing nested multi-dimensional collection shapes
    extends:
      - ArrayShape
      - AnyShape
  NilShape:
    displayName: NilShape
    description: Data shape representing the null/nil value in the input schema
    extends: AnyShape
  Operation:
    displayName: ShapeOperation
    description: Action that can be executed over the data of a particular shape
    extends: core.Operation
  Parameter:
    displayName: ShapeParameter
    description: Piece of data required or returned by an Operation
    extends: core.Parameter
  Payload:
    displayName: ShapePayload
    description: Encoded payload using certain media-type
    extends: core.Payload
  PropertyDependencies:
    displayName: PropertyDependencies
    description: Dependency between sets of property shapes
  PropertyShapePath:
    displayName: PropertyShapePath
    description: Model that represents a property shape path in a traversal to reach a particular Shape
  RecursiveShape:
    displayName: RecursiveShape
    description: Recursion on a Shape structure, used when expanding a shape and finding the canonical representation of that shape.
  Request:
    displayName: ShapeRequest
    description: Request information for an operation
    extends: core.Request
  Response:
    displayName: ShapeResponse
    description: Response information for an operation
    extends: core.Response
  ScalarShape:
    displayName: ScalarShape
    description: Data shape describing a scalar value in the input data model, reified as an scalar node in the mapped graph
    extends: AnyShape
  SchemaDependencies:
    displayName: SchemaDependencies
    description: Dependency between a property shape and a schema
  SchemaShape:
    displayName: SchemaShape
    description: Raw schema that cannot be parsed using AMF shapes model
    extends: AnyShape
  Shape:
    displayName: Shape
    description: |-
      Base class for all shapes. Shapes are Domain Entities that define constraints over parts of a data graph.
      They can be used to define and enforce schemas for the data graph information through SHACL.
      Shapes can be recursive and inherit from other shapes.
    extends: shacl.Shape
  TupleShape:
    displayName: TupleShape
    description: Data shape containing a multi-valued collection of shapes
    extends:
      - ArrayShape
      - AnyShape
  UnionShape:
    displayName: UnionShape
    description: Shape representing the union of many alternative data shapes
    extends: AnyShape
  XMLSerializer:
    displayName: XMLSerializer
    description: Information about how to encode into XML a particular data shape
propertyTerms:
  additionalItemsSchema:
    displayName: additionalItemsSchema
    description: Controls whether itâ€™s valid to have additional items in the array beyond what is defined
    range: shacl.Shape
  anyOf:
    displayName: anyOf
    description: Data shapes in the union
    range: shacl.Shape
  binding:
    displayName: binding
    description: Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
    range: string
  closedItems:
    displayName: closedItems
    description: Constraint limiting additional shapes in the collection
    range: boolean
  closure:
    displayName: inheritanceClosure
    description: Transitive closure of data shapes this particular shape inherits structure from
    range: uri
  collectionFormat:
    displayName: collectionFormat
    description: Input collection format information
    range: string
  contains:
    displayName: contains
    description: One of the shapes in the data arrangement
    range: shacl.Shape
  contentSchema:
    displayName: contentSchema
    description: Describes the content's value structure
    range: shacl.Shape
  dependencies:
    displayName: dependencies
    description: Dependent properties constraint
    range: PropertyDependencies
  deprecated:
    displayName: deprecated
    description: Deprecated annotation for a property constraint
    range: boolean
  discriminator:
    displayName: discriminator
    description: Discriminator property
    range: string
  discriminatorMapping:
    displayName: discriminatorMapping
    description: Mapping of acceptable values for the node discriminator
    range: apiContract.IriTemplateMapping
  discriminatorValue:
    displayName: discriminatorValue
    description: Values for the discriminator property
    range: string
  discriminatorValueMapping:
    displayName: discriminatorValueMapping
    description: Mapping of acceptable values for the node discriminator
    range: DiscriminatorValueMapping
  discriminatorValueTarget:
    displayName: discriminatorValueTarget
    description: Target shape for a certain discriminator value
    range: shacl.Shape
  encoding:
    displayName: encoding
    description: Describes the contents' value encoding
    range: string
  expects:
    displayName: expects
    description: Request information required by the operation
    range: Request
  fileType:
    displayName: fileType
    description: Type of file described by this shape
    range: string
  fixPoint:
    displayName: fixpoint
    description: Link to the base of the recursion for a recursive shape
    range: uri
  format:
    displayName: format
    description: Format constraint
    range: string
  inherits:
    displayName: inherits
    description: Relationship of inheritance between data shapes
    range: shacl.Shape
  inputOnly:
    displayName: inputOnly
    description: Indicates if the shape is used as schema for input data only
    range: boolean
  isAbstract:
    displayName: isAbstract
    description: Marks this shape as an abstract node shape declared for pure re-use
    range: boolean
  isExtension:
    displayName: isExtension
    description: Indicates if a Shape is an extension of another shape or a standalone shape
    range: boolean
  items:
    displayName: items
    description: Shapes contained in the Tuple Shape
    range: shacl.Shape
  maxProperties:
    displayName: maxProperties
    description: Maximum number of properties in the input node constraint
    range: integer
  mediaType:
    displayName: mediaType
    description: Describes the content's value mediatype
    range: string
  minProperties:
    displayName: minProperties
    description: Minimum number of properties in the input node constraint
    range: integer
  multipleOf:
    displayName: multiple of
    description: Multiple of constraint
    range: double
  name:
    displayName: name
    range: string
  paramName:
    displayName: paramName
    description: Name of a parameter
    extends: name
    range: string
  parameter:
    displayName: parameter
    description: Parameters associated to the communication model
    range: Parameter
  path:
    displayName: path
    description: represents a property shape path in a traversal to reach a particular Shape
    range: shacl.PropertyShape
  patternName:
    displayName: patternName
    description: Patterned property constraint
    range: string
  payload:
    displayName: payload
    description: Payload for a Request/Response
    range: Payload
  propertySource:
    displayName: propertySource
    description: Source property name in the dependency
    range: string
  propertyTarget:
    displayName: propertyTarget
    description: Target property name in the dependency
    range: string
  range:
    displayName: range
    description: Range property constraint
    range: shacl.Shape
  readOnly:
    displayName: readOnly
    description: Read only property constraint
    range: boolean
  required:
    displayName: required
    description: Marks the parameter as required
    range: boolean
  returns:
    displayName: returns
    description: Response data returned by the operation
    range: Response
  schema:
    displayName: schema
    description: Schema for an entity
    range: shacl.Shape
  schemaDependencies:
    displayName: schemaDependencies
    description: Applied schemas if property exists constraint
    range: SchemaDependencies
  schemaTarget:
    displayName: schemaTarget
    description: Target applied shape in the dependency
    range: shacl.Shape
  serializationOrder:
    displayName: serializationOrder
    description: position in the set of properties for a shape used to serialize this property on the wire
    range: integer
  serializationSchema:
    displayName: serializationSchema
    description: Serialization schema for a shape
    range: shacl.Shape
  supportedOperation:
    displayName: supportedOperation
    description: Supported operations for this shape
    range: Operation
  unevaluatedItems:
    displayName: unevaluatedItems
    description: Accepts that items may not be evaluated in schema validation
    range: boolean
  unevaluatedItemsSchema:
    displayName: unevaluatedItemsSchema
    description: Items that may not be evaluated in schema validation
    range: shacl.Shape
  unevaluatedProperties:
    displayName: unevaluatedProperties
    description: Accepts that properties may not be evaluated in schema validation
    range: boolean
  unevaluatedPropertiesSchema:
    displayName: unevaluatedPropertiesSchema
    description: Properties that may not be evaluated in schema validation
    range: shacl.Shape
  uniqueItems:
    displayName: uniqueItems
    description: Unique items constraint
    range: boolean
  writeOnly:
    displayName: writeOnly
    description: Write only property constraint
    range: boolean
  xmlAttribute:
    displayName: xmlAttribute
    description: XML attribute mapping
    range: boolean
  xmlName:
    displayName: xmlName
    description: XML name mapping
    range: string
  xmlNamespace:
    displayName: xmlNamespace
    description: XML namespace mapping
    range: string
  xmlPrefix:
    displayName: xmlPrefix
    description: XML prefix mapping
    range: string
  xmlSerialization:
    displayName: XmlSerialization
    description: Information about how to serialize
    range: XMLSerializer
  xmlWrapped:
    displayName: xmlWrapped
    description: XML wrapped mapping flag
    range: boolean
