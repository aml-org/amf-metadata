#%Vocabulary 1.0
base: http://www.w3.org/ns/shacl#
usage: SHACL vocabulary
external:
  shapes: http://a.ml/vocabularies/shapes#
  data: http://a.ml/vocabularies/data#
classTerms:
  NodeShape:
    displayName: NodeShape
    description: Shape that validates a record of fields, like a JS object
    extends:
      - shapes.AnyShape
      - Shape
  PropertyShape:
    displayName: PropertyShape
    description: Constraint over a property in a data shape.
    extends: Shape
  Shape:
    displayName: Shape
    description: shacl:Shape is the SHACL superclass of those two shape types in the SHACL vocabulary. Its subclasses shacl:NodeShape and shacl:PropertyShape can be used as SHACL type of node and property shapes, respectively.
propertyTerms:
  additionalPropertiesSchema:
    displayName: additionalPropertiesSchema
    description: Additional properties schema
    range: Shape
  and:
    displayName: and
    description: Logical and composition of data shapes
    range: Shape
  closed:
    displayName: closed
    description: Additional properties in the input node accepted constraint
    range: boolean
  datatype:
    displayName: dataType
    description: Data type of value for an scalar dynamic node
    range: uri
  defaultValue:
    displayName: defaultValue
    description: Default value parsed for a data shape property
    range: data.Node
  defaultValueStr:
    displayName: defaultValueString
    description: Textual representation of the parsed default value for the shape property
    range: string
  else:
    displayName: else
    description: Composition of data shape when if data shape is invalid
    range: Shape
  if:
    displayName: if
    description: Condition for applying composition of data shapes
    range: Shape
  in:
    displayName: in
    description: Enumeration of possible values for a data shape property
    range: data.Node
  maxCount:
    displayName: maxCount
    description: Maximum count property constraint
    range: integer
  maxExclusive:
    displayName: max. exclusive
    description: Maximum exclusive constraint
    range: boolean
  maxInclusive:
    displayName: max. inclusive
    description: Maximum inclusive constraint
    range: double
  maxLength:
    displayName: maxLength
    description: Maximum length constraint
    range: integer
  minCount:
    displayName: minCount
    description: Minimum count property constraint
    range: integer
  minExclusive:
    displayName: min. exclusive
    description: Minimum exclusive constraint
    range: boolean
  minInclusive:
    displayName: minInclusive
    description: Minimum inclusive constraint
    range: double
  minLength:
    displayName: minLength
    description: Minimum lenght constraint
    range: integer
  name:
    displayName: name
    description: Name for a data shape
    range: string
  node:
    displayName: range
    description: Object constraint over the type of the mapped property
    range: uri
  not:
    displayName: not
    description: Logical not composition of data shapes
    range: Shape
  or:
    displayName: or
    description: Logical or composition of data shapes
    range: Shape
  path:
    displayName: path
    description: Path to the constrained property
    range: uri
  pattern:
    displayName: pattern
    description: Pattern constraint
    range: string
  property:
    displayName: property
    description: Properties associated to this node
    range: PropertyShape
  propertyNames:
    displayName: propertyNames
    description: Property names schema
    range: Shape
  targetClass:
    displayName: targetClass
    description: Target class whose instances will need to match the constraint described for the node
    range: uri
  then:
    displayName: then
    description: Composition of data shape when if data shape is valid
    range: Shape
  xone:
    displayName: exclusiveOr
    description: Logical exclusive or composition of data shapes
    range: Shape
